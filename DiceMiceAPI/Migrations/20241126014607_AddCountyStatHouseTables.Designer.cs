// <auto-generated />
using System;
using DiceMiceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiceMiceAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241126014607_AddCountyStatHouseTables")]
    partial class AddCountyStatHouseTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiceMiceAPI.Models.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedStatId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedStatId");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GoldAmount")
                        .HasColumnType("integer");

                    b.Property<string>("HeadOfHouse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("HouseSeatCountyId")
                        .HasColumnType("integer");

                    b.Property<string>("Motto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HouseSeatCountyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HouseId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.County", b =>
                {
                    b.HasOne("DiceMiceAPI.Models.Stat", "AssociatedStat")
                        .WithMany("Counties")
                        .HasForeignKey("AssociatedStatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedStat");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.House", b =>
                {
                    b.HasOne("DiceMiceAPI.Models.County", "HouseSeatCounty")
                        .WithMany("Houses")
                        .HasForeignKey("HouseSeatCountyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DiceMiceAPI.Models.User", "User")
                        .WithOne("House")
                        .HasForeignKey("DiceMiceAPI.Models.House", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("HouseSeatCounty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.User", b =>
                {
                    b.HasOne("DiceMiceAPI.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.County", b =>
                {
                    b.Navigation("Houses");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.Stat", b =>
                {
                    b.Navigation("Counties");
                });

            modelBuilder.Entity("DiceMiceAPI.Models.User", b =>
                {
                    b.Navigation("House");
                });
#pragma warning restore 612, 618
        }
    }
}
